#!/usr/bin/env zsh

tangle_defn() {

    echo "generating 'kat.k', 'imp-kat.k', 'imp.k' ..."
    echo "============================================"

    pandoc-tangle --from markdown --to code-k --code kat KAT.md > kat.k
    pandoc-tangle --from markdown --to code-k --code imp-kat  KAT-IMP.md > imp-kat.k
    pandoc-tangle --from markdown --to code-k --code imp-lang KAT-IMP.md > imp.k

    echo "running 'kompile' ..."
    echo "====================="

    kompile --debug --main-module IMP-ANALYSIS --syntax-module IMP-ANALYSIS imp-kat.k || exit 1
}

tangle_test() {
    echo "generating tests ..."
    echo "===================="

    mkdir -p tests/output

    examples=(straight-line-1 straight-line-2 dead-if sum sum-plus collatz)
    for example in $examples; do
        pandoc-tangle --from markdown --to code-k --code "$example" KAT-IMP-examples.md > "tests/$example.imp"
    done

    pandoc-tangle --from markdown --to code-sh --code runtests KAT-IMP-examples.md > tests/runtests.sh
    chmod u+x tests/runtests.sh

    tests=( straight-line-1-bimc1 straight-line-1-bimc2
            straight-line-2-bimc1 straight-line-2-bimc2 straight-line-2-bimc3
            sum-bimc1 sum-bimc2 sum-bimc3 collatz-bimc
            straight-line-1-sbc straight-line-2-sbc
            dead-if-sbc sum-sbc sum-plus-sbc
            collatz-sbc
          )

    for test in $tests; do
        pandoc-tangle --from markdown --to code-k --code "$test" KAT-IMP-examples.md > tests/output/$test.out
    done

    echo "running tests ..."
    echo "================="

    pushd tests
    bash runtests.sh || exit 1
    popd
}

[[ "$#" == '0' ]] && set 'all'

while [[ "$#" -gt '0' ]]; do
    tangle_command="$1" && shift
    case "$tangle_command" in
        all)  set defn test ;;
        defn) tangle_defn ;;
        test) tangle_test ;;
        *)    echo "Unrecognized option: '$tangle_command' ..." ;;
    esac
done
