
Strategy: step ; bimc 500 (bexp? s <= 32)
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #false in 31 steps
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          n = 10 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 0
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 0 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s = 10 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n = 9 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 10 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          s = 19 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 19 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          s = 27 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n = 7 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 27 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          s = 34 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
      </k>
      <mem>
        n |-> 7
        s |-> 34
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: step ; bimc 31  (bexp? s <= 32)
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #false in 31 steps
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          n = 10 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 0
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 0 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s = 10 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n = 9 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 10 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          s = 19 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 19 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          s = 27 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n = 7 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 27 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          s = 34 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
      </k>
      <mem>
        n |-> 7
        s |-> 34
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: step ; bimc 30  (bexp? s <= 32)
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #true in 30 steps
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          n = 10 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 0
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 0 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s = 10 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n = 9 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 10 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          s = 19 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 9
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 19 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          s = 27 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n = 7 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 8
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } , { } )
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { s = s + n ; n = n + -1 ; } while ( 0 <= n ) { s = s + n ; n = n + -1 ; } } else { }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 27 ) ~> #freezer_=_;_IMP0_ ( s ) ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 7
          s |-> 27
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        s = 34 ; ~> n = n + -1 ; ~> while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
      </k>
      <mem>
        n |-> 7
        s |-> 27
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: exec-to-branch
================================================================================
<kat-imp>
  <s>
    #STUCK ( )
  </s>
  <kat>
    <analysis>
      .Analysis
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        .
      </k>
      <mem>
        n |-> -1
        s |-> 55
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: compile
================================================================================
<kat-imp>
  <s>
    #STUCK ( )
  </s>
  <kat>
    <analysis>
      .Rules , < <imp>
        <k>
          int n , s , .Ids ; s = 0 ; n = 10 ; while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          .Map
        </mem>
      </imp> --> <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> requires #True > , < <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> V0
          s |-> V1
        </mem>
      </imp> --> <imp>
        <k>
          .
        </k>
        <mem>
          n |-> V0
          s |-> V1
        </mem>
      </imp> requires 0 <=Int V0 ==K false > , < <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> V2
          s |-> V3
        </mem>
      </imp> --> <imp>
        <k>
          while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
        </k>
        <mem>
          n |-> V2 +Int -1
          s |-> V3 +Int V2
        </mem>
      </imp> requires 0 <=Int V2 ==K true >
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        while ( 0 <= n ) { s = s + n ; n = n + -1 ; }
      </k>
      <mem>
        n |-> V4
        s |-> V5
      </mem>
    </imp>
  </harness>
</kat-imp>
