
Strategy: exec-to-branch
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #which-can ^ divnonzero | ^ divzero
  </s>
  <kat>
    <analysis>
      .Analysis
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        7 / V0 ~> #freezer_=_;_IMP0_ ( y )
      </k>
      <mem>
        x |-> V0
        y |-> V1
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: compile
================================================================================
<kat-imp>
  <s>
    #STUCK ( )
  </s>
  <kat>
    <analysis>
      .Rules , < <imp>
        <k>
          int x , y , .Ids ; x = V0 ; y = V1 ; y = 7 / x ;
        </k>
        <mem>
          .Map
        </mem>
      </imp> --> <imp>
        <k>
          .
        </k>
        <mem>
          x |-> V0
          y |-> 7 /Int V0
        </mem>
      </imp> requires V0 ==K 0 ==K false > , < <imp>
        <k>
          int x , y , .Ids ; x = 0 ; y = V2 ; y = 7 / x ;
        </k>
        <mem>
          .Map
        </mem>
      </imp> --> <imp>
        <k>
          div-zero-error ~> #freezer_=_;_IMP0_ ( y )
        </k>
        <mem>
          x |-> 0
          y |-> V2
        </mem>
      </imp> requires #True >
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        div-zero-error ~> #freezer_=_;_IMP0_ ( y )
      </k>
      <mem>
        x |-> 0
        y |-> V2
      </mem>
    </imp>
  </harness>
</kat-imp>
