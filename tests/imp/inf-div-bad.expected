
Strategy: bimc 5000 (not can? (^ divzero))
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #false in 97 steps
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          int x , y , .Ids ; y = V0 ; x = 10 ; while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          .Map
        </mem>
      </imp> ; <imp>
        <k>
          x = 10 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          V0 / 10 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x = 9 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 / 9 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x = 8 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 / 8 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x = 7 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 / 7 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x = 6 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 / 6 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x = 5 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 / 5 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x = 4 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 / 4 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x = 3 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 / 3 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x = 2 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 / 2 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x = 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 / 1 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x = 0 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 / 0 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
      </k>
      <mem>
        x |-> 0
        y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: bimc 97   (not can? (^ divzero))
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #false in 97 steps
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          int x , y , .Ids ; y = V0 ; x = 10 ; while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          .Map
        </mem>
      </imp> ; <imp>
        <k>
          x = 10 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          V0 / 10 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x = 9 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 / 9 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x = 8 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 / 8 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x = 7 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 / 7 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x = 6 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 / 6 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x = 5 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 / 5 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x = 4 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 / 4 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x = 3 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 / 3 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x = 2 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 / 2 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x = 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 / 1 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x = 0 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 / 0 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
      </k>
      <mem>
        x |-> 0
        y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: bimc 96   (not can? (^ divzero))
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #true in 96 steps
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          int x , y , .Ids ; y = V0 ; x = 10 ; while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          .Map
        </mem>
      </imp> ; <imp>
        <k>
          x = 10 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          V0 / 10 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x = 9 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 / 9 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x = 8 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 9
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 / 8 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x = 7 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 8
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 / 7 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x = 6 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 7
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 / 6 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x = 5 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 6
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 / 5 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x = 4 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 5
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 / 4 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x = 3 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 4
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 / 3 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x = 2 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 3
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 / 2 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x = 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 2
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 / 1 ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          y = V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 ; ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_-__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x = 0 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 1
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } , { } )
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { y = y / x ; x = x - 1 ; } while ( 0 <= x ) { y = y / x ; x = x - 1 ; } } else { }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp> ; <imp>
        <k>
          y ~> #freezer_/__IMP1_ ( x ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        x ~> #freezer_/__IMP0_ ( V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1 ) ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
      </k>
      <mem>
        x |-> 0
        y |-> V0 /Int 10 /Int 9 /Int 8 /Int 7 /Int 6 /Int 5 /Int 4 /Int 3 /Int 2 /Int 1
      </mem>
    </imp>
  </harness>
</kat-imp>

Strategy: compile
================================================================================
<kat-imp>
  <s>
    #STUCK ( )
  </s>
  <kat>
    <analysis>
      .Rules , < <imp>
        <k>
          int x , y , .Ids ; y = V0 ; x = 10 ; while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          .Map
        </mem>
      </imp> --> <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 10
          y |-> V0
        </mem>
      </imp> requires #True > , < <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> V1
          y |-> V2
        </mem>
      </imp> --> <imp>
        <k>
          .
        </k>
        <mem>
          x |-> V1
          y |-> V2
        </mem>
      </imp> requires 0 <=Int V1 ==K false > , < <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> V3
          y |-> V4
        </mem>
      </imp> --> <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> V3 -Int 1
          y |-> V4 /Int V3
        </mem>
      </imp> requires 0 <=Int V3 ==K true #And
      V3 ==K 0 ==K false > , < <imp>
        <k>
          while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V5
        </mem>
      </imp> --> <imp>
        <k>
          div-zero-error ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
        </k>
        <mem>
          x |-> 0
          y |-> V5
        </mem>
      </imp> requires #True >
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        div-zero-error ~> #freezer_=_;_IMP0_ ( y ) ~> x = x - 1 ; ~> while ( 0 <= x ) { y = y / x ; x = x - 1 ; }
      </k>
      <mem>
        x |-> 0
        y |-> V5
      </mem>
    </imp>
  </harness>
</kat-imp>
