Program:  nth.fun
Strategy: exec
================================================================================
<kat-FUN>
  <s>
    #STUCK ( )
  </s>
  <kat>
    <analysis>
      .Analysis
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <FUN>
      <k>
        [ 10 , 11 , 12 , 13 , 14 , .Vals ]
      </k>
      <env>
        .Map
      </env>
      <store>
        1 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , 1 -> ( fun ( [ h , .Names | t ] -> h ) | .Cases ) | n -> ( fun ( [ h , .Names | t ] -> nth ( n - 1 ) t ) | .Cases ) | .Cases )
        2 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , n -> ( fun ( m -> if n == m then [ n , .Names ] else cons n ( nat ( n + 1 ) m ) ) | .Cases ) | .Cases )
        3 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , [ .Names ] -> 0 | [ h , .Names | t ] -> 1 + length t | .Cases )
        4 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , f -> ( fun ( [ .Names ] -> [ .Names ] ) | [ h , .Names | t ] -> cons ( f h ) ( map f t ) | .Cases ) | .Cases )
        5 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , [ .Names ] -> ( fun ( x -> [ .Names ] ) | .Cases ) | [ h , .Names | t ] -> ( fun ( x -> cons ( h x ) ( app t x ) ) | .Cases ) | .Cases )
        6 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , 1 -> ( fun ( [ h , .Names | t ] -> h ) | .Cases ) | n -> ( fun ( [ h , .Names | t ] -> nth ( n - 1 ) t ) | .Cases ) | .Cases )
        7 |-> 1
        8 |-> 5
        9 |-> 2
        10 |-> 5
        11 |-> 3
        12 |-> 5
        13 |-> 4
        14 |-> 5
        15 |-> 5
        16 |-> 5
        17 |-> 1
        18 |-> [ 2 , 3 , 4 , 5 , .Vals ]
        19 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , 1 -> ( fun ( [ h , .Names | t ] -> h ) | .Cases ) | n -> ( fun ( [ h , .Names | t ] -> nth ( n - 1 ) t ) | .Cases ) | .Cases )
        20 |-> 2
        21 |-> [ 3 , 4 , 5 , .Vals ]
        22 |-> 2
        23 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , 1 -> ( fun ( [ h , .Names | t ] -> h ) | .Cases ) | n -> ( fun ( [ h , .Names | t ] -> nth ( n - 1 ) t ) | .Cases ) | .Cases )
        24 |-> 3
        25 |-> [ 4 , 5 , .Vals ]
        26 |-> 3
        27 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , 1 -> ( fun ( [ h , .Names | t ] -> h ) | .Cases ) | n -> ( fun ( [ h , .Names | t ] -> nth ( n - 1 ) t ) | .Cases ) | .Cases )
        28 |-> 4
        29 |-> [ 5 , .Vals ]
        30 |-> 4
        31 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , 1 -> ( fun ( [ h , .Names | t ] -> h ) | .Cases ) | n -> ( fun ( [ h , .Names | t ] -> nth ( n - 1 ) t ) | .Cases ) | .Cases )
        32 |-> 5
        33 |-> [ .Names ]
        34 |-> 5
        35 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , 1 -> ( fun ( [ h , .Names | t ] -> h ) | .Cases ) | n -> ( fun ( [ h , .Names | t ] -> nth ( n - 1 ) t ) | .Cases ) | .Cases )
        36 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> h | .Cases )
        37 |-> [ closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 22
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 26
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 30
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 34
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , .Vals ]
        38 |-> [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        39 |-> 10
        40 |-> [ 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        41 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 22
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases )
        42 |-> [ closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 26
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 30
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 34
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , .Vals ]
        43 |-> [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        44 |-> 10
        45 |-> [ 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        46 |-> 11
        47 |-> [ 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        48 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 26
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases )
        49 |-> [ closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 30
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 34
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , .Vals ]
        50 |-> [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        51 |-> 10
        52 |-> [ 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        53 |-> 2
        54 |-> 11
        55 |-> [ 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        56 |-> 12
        57 |-> [ 13 , 14 , 15 , 16 , 17 , .Vals ]
        58 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 30
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases )
        59 |-> [ closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 34
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases ) , .Vals ]
        60 |-> [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        61 |-> 10
        62 |-> [ 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        63 |-> 3
        64 |-> 11
        65 |-> [ 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        66 |-> 2
        67 |-> 12
        68 |-> [ 13 , 14 , 15 , 16 , 17 , .Vals ]
        69 |-> 13
        70 |-> [ 14 , 15 , 16 , 17 , .Vals ]
        71 |-> closure ( app |-> 5
        length |-> 3
        map |-> 4
        n |-> 34
        nat |-> 2
        nth |-> 1 , [ h , .Names | t ] -> nth ( n - 1 ) t | .Cases )
        72 |-> [ .Names ]
        73 |-> [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        74 |-> 10
        75 |-> [ 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        76 |-> 4
        77 |-> 11
        78 |-> [ 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
        79 |-> 3
        80 |-> 12
        81 |-> [ 13 , 14 , 15 , 16 , 17 , .Vals ]
        82 |-> 2
        83 |-> 13
        84 |-> [ 14 , 15 , 16 , 17 , .Vals ]
        85 |-> 14
        86 |-> [ 15 , 16 , 17 , .Vals ]
        87 |-> [ 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , .Vals ]
      </store>
    </FUN>
  </harness>
</kat-FUN>
