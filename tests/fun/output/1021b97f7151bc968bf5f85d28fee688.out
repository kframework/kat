Program:  constructor-tree-mirror.fun
Strategy: exec
================================================================================
<kat-FUN>
  <s>
    #STUCK ( )
  </s>
  <kat>
    <analysis>
      .Analysis
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <FUN>
      <k>
        Tree ( Tree ( Tree ( Leaf ( 5 , .Vals ) , Leaf ( 4 , .Vals ) , .Vals ) , Leaf ( 3 , .Vals ) , .Vals ) , Tree ( Leaf ( 2 , .Vals ) , Leaf ( 1 , .Vals ) , .Vals ) , .Vals )
      </k>
      <env>
        .Map
      </env>
      <store>
        1 |-> closure ( mirror |-> 1 , Leaf ( n , .Names ) -> Leaf ( n , .Names ) | Tree ( left , right , .Names ) -> Tree ( mirror right , mirror left , .Names ) | .Cases )
        2 |-> Tree ( Leaf ( 3 , .Vals ) , Tree ( Leaf ( 4 , .Vals ) , Leaf ( 5 , .Vals ) , .Vals ) , .Vals )
        3 |-> Tree ( Leaf ( 1 , .Vals ) , Leaf ( 2 , .Vals ) , .Vals )
        4 |-> Tree ( Leaf ( 4 , .Vals ) , Leaf ( 5 , .Vals ) , .Vals )
        5 |-> Leaf ( 3 , .Vals )
        6 |-> Leaf ( 5 , .Vals )
        7 |-> Leaf ( 4 , .Vals )
        8 |-> 5
        9 |-> 4
        10 |-> 3
        11 |-> Leaf ( 2 , .Vals )
        12 |-> Leaf ( 1 , .Vals )
        13 |-> 2
        14 |-> 1
      </store>
    </FUN>
  </harness>
</kat-FUN>
