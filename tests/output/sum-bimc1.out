// IMP-KAT Tests
// =============

// This is a simple testing harness driven by the `tangle` script. Call
// `./tangle test` in the root directory to run the test-set.

// BIMC
// ----

// Here, we allow each program to initialize (get through variable declarations) by
// running `step-with skip`. Then we issue some `bimc` query to check if the
// program obeys the given invariant up to the depth-bound.

// ### Sum

// Query with large bound to find which step pushed the sum above `32`:


<kat-imp>
 <s> #STUCK ~> #bimc-result #false in 41 steps </s>
 <kat>
  <analysis> .Analysis </analysis>
  <states> .States </states>
 </kat>
 <imp>
  <k> while ( 0 <= n ) { n = n + -1 ; s = s + n ; } </k>
  <mem> s |-> 35 n |-> 5 </mem>
 </imp>
</kat-imp>


// Show that the returned number is the correct step that an assertion violation
// happens at:

// And that one step prior the assertion was not violated:
