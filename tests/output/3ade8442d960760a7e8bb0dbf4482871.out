Program:  tests/collatz-all.imp
Strategy: step-with skip ; step 3 ; bimc 5000 (bexp? n <= 1000)
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #true in 891 steps ~> ^ regular *
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          b = 2 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 1
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 2
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          x = 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          b = 3 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 2
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          n = 3 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 3 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          3 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 3 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          n = 10 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 3
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          x = 2 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 1
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          n = 5 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 10
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          x = 3 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 2
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          5 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          n = 16 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 5
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          x = 4 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 3
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 16
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          x = 5 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 4
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 8
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          x = 6 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 5
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 4
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          x = 7 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 6
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 2
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          x = 8 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 7
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          b = 4 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 3
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 4
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          x = 9 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 8
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 2
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          x = 10 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          b = 5 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 4
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n = 5 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          5 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          n = 16 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 5
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          x = 11 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 10
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 16
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          x = 12 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 11
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 8
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          x = 13 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 12
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 4
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          x = 14 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 13
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 2
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          x = 15 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 14
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          b = 6 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 5
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          n = 6 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 6 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          6 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 6 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          6 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          n = 3 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 6
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          x = 16 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 15
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 3 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          3 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 3 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          n = 10 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 3
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          x = 17 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 16
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n = 5 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 10
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          x = 18 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          5 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          n = 16 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 5
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          x = 19 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 18
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 16
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          x = 20 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 19
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 8
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          x = 21 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 20
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 4
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          x = 22 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 21
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 2
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          x = 23 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 22
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          b = 7 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 6
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          n = 7 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 7 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          7 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 7 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          n = 22 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 7
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          x = 24 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 23
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 22 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          22 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 22 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          22 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n = 11 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 22
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          x = 25 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 11 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          11 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 11 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          n = 34 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 11
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          x = 26 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 25
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 34 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          34 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 34 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          34 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          n = 17 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 34
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          x = 27 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 26
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 17 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          17 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 17 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          n = 52 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 17
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          x = 28 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 27
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 52 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          52 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 52 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          52 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          n = 26 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 52
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          x = 29 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 28
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 26 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          26 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 26 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          26 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          n = 13 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 26
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          x = 30 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 29
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 13 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          13 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 13 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n = 40 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 13
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          x = 31 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 40 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          40 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 40 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          40 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          n = 20 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 40
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          x = 32 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 31
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 20 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          20 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 20 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          20 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          n = 10 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 20
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          x = 33 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 32
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          n = 5 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 10
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          x = 34 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 33
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          5 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          n = 16 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 5
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          x = 35 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 34
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 16
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          x = 36 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 35
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 8
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          x = 37 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 36
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 4
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          x = 38 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 37
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 2
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          x = 39 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 38
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          b = 8 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 7
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 8
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          x = 40 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 39
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 4
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          x = 41 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 40
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 2
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          x = 42 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 41
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          b = 9 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 8
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          n = 9 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 9 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          9 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 9 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          n = 28 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 9
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          x = 43 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 42
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 28 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          28 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 28 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          28 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          n = 14 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 28
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          x = 44 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 43
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 14 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          14 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 14 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          14 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          n = 7 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 14
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          x = 45 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 44
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 7 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          7 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 7 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          n = 22 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 7
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          x = 46 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 45
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 22 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          22 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 22 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          22 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          n = 11 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 22
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          x = 47 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 46
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 11 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          11 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 11 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          n = 34 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 11
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          x = 48 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 47
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 34 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          34 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 34 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          34 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          n = 17 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 34
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          x = 49 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 48
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 17 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          17 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 17 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          n = 52 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 17
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          x = 50 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 49
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 52 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          52 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 52 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          52 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          n = 26 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 52
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          x = 51 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 50
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 26 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          26 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 26 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          26 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          n = 13 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 26
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          x = 52 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 51
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 13 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          13 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 13 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          n = 40 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 13
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          x = 53 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 52
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 40 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          40 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 40 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          40 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          n = 20 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 40
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          x = 54 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 53
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 20 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          20 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 20 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          20 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          n = 10 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 20
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          x = 55 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 54
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          n = 5 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 10
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          x = 56 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 55
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          5 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          n = 16 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 5
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          x = 57 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 56
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 16
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          x = 58 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 57
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 8
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          x = 59 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 58
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 4
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          x = 60 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 59
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 2
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          x = 61 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 60
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          b = 10 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 9
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_=_;_IMP0_ ( n ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          n = 10 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          10 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          n = 5 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 10
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          x = 62 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 61
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          5 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 5 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_*__IMP0_ ( 3 ) ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          n = 16 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 5
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          x = 63 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 62
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 16 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          16 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 16
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          x = 64 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 63
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 8 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          8 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          n = 4 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 8
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          x = 65 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 64
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 4 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          4 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          n = 2 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 4
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          x = 66 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 65
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP1_ ( ( n / 2 ) * 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_*__IMP1_ ( 2 ) ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { n = n / 2 ; } , { n = 3 * n + 1 ; } ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { n = n / 2 ; } else { n = 3 * n + 1 ; } ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_/__IMP1_ ( 2 ) ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          2 / 2 ~> #freezer_=_;_IMP0_ ( n ) ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          n = 1 ; ~> x = x + 1 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 2
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          x ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( x ) ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          x = 67 ; ~> while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 66
        </mem>
      </imp> ; <imp>
        <k>
          while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 2 ) ~> #freezerif(_)_else__IMP1_ ( { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } , { } ) ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } } else { } ~> b = b + 1 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_+__IMP1_ ( 1 ) ~> #freezer_=_;_IMP0_ ( b ) ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          b = 11 ; ~> while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 10
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; }
        </k>
        <mem>
          b |-> 11
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          b ~> #freezer_<=__IMP1_ ( 10 ) ~> #freezerif(_)_else__IMP1_ ( { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } , { } )
        </k>
        <mem>
          b |-> 11
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          if ( false ) { { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } while ( b <= 10 ) { n = b ; while ( 2 <= n ) { if ( n <= ( n / 2 ) * 2 ) { n = n / 2 ; } else { n = 3 * n + 1 ; } x = x + 1 ; } b = b + 1 ; } } else { }
        </k>
        <mem>
          b |-> 11
          n |-> 1
          x |-> 67
        </mem>
      </imp> ; <imp>
        <k>
          .
        </k>
        <mem>
          b |-> 11
          n |-> 1
          x |-> 67
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        .
      </k>
      <mem>
        b |-> 11
        n |-> 1
        x |-> 67
      </mem>
    </imp>
  </harness>
</kat-imp>
