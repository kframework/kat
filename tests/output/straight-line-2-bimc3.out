// Running KAT
// ===========

// We'll use a simple testing harness in `bash` which just checks the output of
// `krun --search` against a supplied file. Run this with `bash runtests.sh`.

// BIMC
// ----

// Here, we allow each program to initialize (get through variable declarations) by
// running `step-with skip`. Then we issue some `bimc` query to check if the
// program obeys the given invariant up to the depth-bound.

// ### Straight Line 2

// Assertion not violated up to step 2:

// Assertion violated at step 3:

// Assertion still violated at step 3 (with extended bound):


Solution 1
<kat-imp>
 <s> #STUCK ~> #bimc-result #false in 3 steps </s>
 <kat>
  <analysis> .Analysis </analysis>
  <states> .States </states>
 </kat>
 <imp>
  <k> x ~> #freezer_+_1 ( -10 ) ~> #freezer_=_;0 ( x ) </k>
  <mem> x |-> 15 </mem>
 </imp>
</kat-imp>

