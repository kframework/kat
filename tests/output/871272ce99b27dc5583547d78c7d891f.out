Program:  tests/sum.imp
Strategy: step-with skip ; step ; bimc 40  (bexp? s <= 32)
================================================================================
<kat-imp>
  <s>
    #STUCK ( ) ~> #bimc-result #true in 40 steps ~> ^ regular *
  </s>
  <kat>
    <analysis>
      .Trace ; <imp>
        <k>
          n = 10 ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> V0
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } , { } )
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } else { }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n = 9 ; ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 10
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 9
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 0 ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 9
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          s = 9 ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 9
          s |-> 0
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 9
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } , { } )
        </k>
        <mem>
          n |-> 9
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } else { }
        </k>
        <mem>
          n |-> 9
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 9
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n = 8 ; ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 9
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 8
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 9 ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 8
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          s = 17 ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 8
          s |-> 9
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 8
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } , { } )
        </k>
        <mem>
          n |-> 8
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } else { }
        </k>
        <mem>
          n |-> 8
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 8
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n = 7 ; ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 8
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 7
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 17 ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 7
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          s = 24 ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 7
          s |-> 17
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 7
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } , { } )
        </k>
        <mem>
          n |-> 7
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } else { }
        </k>
        <mem>
          n |-> 7
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 7
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n = 6 ; ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 7
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 6
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 24 ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 6
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          s = 30 ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 6
          s |-> 24
        </mem>
      </imp> ; <imp>
        <k>
          while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 6
          s |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_<=__IMP0_ ( 0 ) ~> #freezerif(_)_else__IMP1_ ( { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } , { } )
        </k>
        <mem>
          n |-> 6
          s |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          if ( true ) { { n = n + -1 ; s = s + n ; } while ( 0 <= n ) { n = n + -1 ; s = s + n ; } } else { }
        </k>
        <mem>
          n |-> 6
          s |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP1_ ( -1 ) ~> #freezer_=_;_IMP0_ ( n ) ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 6
          s |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n = 5 ; ~> s = s + n ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 6
          s |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          s ~> #freezer_+__IMP1_ ( n ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 5
          s |-> 30
        </mem>
      </imp> ; <imp>
        <k>
          n ~> #freezer_+__IMP0_ ( 30 ) ~> #freezer_=_;_IMP0_ ( s ) ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
        </k>
        <mem>
          n |-> 5
          s |-> 30
        </mem>
      </imp>
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <imp>
      <k>
        s = 35 ; ~> while ( 0 <= n ) { n = n + -1 ; s = s + n ; }
      </k>
      <mem>
        n |-> 5
        s |-> 30
      </mem>
    </imp>
  </harness>
</kat-imp>
