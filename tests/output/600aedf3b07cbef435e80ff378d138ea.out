Program:  tests/references-1.fun
Strategy: exec
================================================================================
<kat-FUN>
  <s>
    #STUCK ( )
  </s>
  <kat>
    <analysis>
      .Analysis
    </analysis>
    <states>
      .States
    </states>
  </kat>
  <harness>
    <FUN>
      <k>
        620448401733239439360000
      </k>
      <env>
        .Map
      </env>
      <store>
        1 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , l -> ( fun ( Pair ( x , y , .Names ) -> if @ x != y then -1 else if ( fun ( [ .Names ] -> true ) | [ $h , .Names | $t ] -> false | .Cases ) ( ( fun ( [ $h , .Names | $t ] -> $t ) | .Cases ) l ) then ( fun ( [ $h , .Names | $t ] -> $h ) | .Cases ) l else let ( x = max ( ( fun ( [ $h , .Names | $t ] -> $t ) | .Cases ) l ) Pair ( x := @ x + 1 ; x , y + 1 , .Names ) ) and .Bindings in if x <= ( fun ( [ $h , .Names | $t ] -> $h ) | .Cases ) l then ( fun ( [ $h , .Names | $t ] -> $h ) | .Cases ) l else x ) | .Cases ) | .Cases )
        2 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , f -> ( fun ( l -> if ( fun ( [ .Names ] -> true ) | [ $h , .Names | $t ] -> false | .Cases ) l then [ .Names ] else cons ( f ( ( fun ( [ $h , .Names | $t ] -> $h ) | .Cases ) l ) ) ( map f ( ( fun ( [ $h , .Names | $t ] -> $t ) | .Cases ) l ) ) ) | .Cases ) | .Cases )
        3 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , x -> if x <= 0 then 1 else x * factorial ( x - 1 ) | .Cases )
        4 |-> 4
        5 |-> 4
        6 |-> 3
        7 |-> 2
        8 |-> 1
        9 |-> 0
        10 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , x -> if x <= 0 then 1 else x * factorial ( x - 1 ) | .Cases )
        11 |-> [ 1 , 2 , 3 , 24 , .Names ]
        12 |-> 1
        13 |-> [ 2 , 3 , 24 , .Names ]
        14 |-> 1
        15 |-> [ 2 , 3 , 24 , .Names ]
        16 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , x -> if x <= 0 then 1 else x * factorial ( x - 1 ) | .Cases )
        17 |-> [ 2 , 3 , 24 , .Names ]
        18 |-> 2
        19 |-> [ 3 , 24 , .Names ]
        20 |-> 2
        21 |-> [ 3 , 24 , .Names ]
        22 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , x -> if x <= 0 then 1 else x * factorial ( x - 1 ) | .Cases )
        23 |-> [ 3 , 24 , .Names ]
        24 |-> 3
        25 |-> [ 24 , .Names ]
        26 |-> 3
        27 |-> [ 24 , .Names ]
        28 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , x -> if x <= 0 then 1 else x * factorial ( x - 1 ) | .Cases )
        29 |-> [ 24 , .Names ]
        30 |-> 24
        31 |-> [ .Names ]
        32 |-> 24
        33 |-> [ .Names ]
        34 |-> closure ( factorial |-> 3
        map |-> 2
        max |-> 1 , x -> if x <= 0 then 1 else x * factorial ( x - 1 ) | .Cases )
        35 |-> [ .Names ]
        36 |-> 24
        37 |-> [ .Names ]
        38 |-> 24
        39 |-> 23
        40 |-> 22
        41 |-> 21
        42 |-> 20
        43 |-> 19
        44 |-> 18
        45 |-> 17
        46 |-> 16
        47 |-> 15
        48 |-> 14
        49 |-> 13
        50 |-> 12
        51 |-> 11
        52 |-> 10
        53 |-> 9
        54 |-> 8
        55 |-> 7
        56 |-> 6
        57 |-> 5
        58 |-> 4
        59 |-> 3
        60 |-> 2
        61 |-> 1
        62 |-> 0
        63 |-> 3
        64 |-> [ 24 , .Names ]
        65 |-> 3
        66 |-> 2
        67 |-> 1
        68 |-> 0
        69 |-> 2
        70 |-> [ 3 , 24 , .Names ]
        71 |-> 2
        72 |-> 1
        73 |-> 0
        74 |-> 1
        75 |-> [ 2 , 3 , 24 , .Names ]
        76 |-> 1
        77 |-> 0
        78 |-> [ 1 , 2 , 6 , 620448401733239439360000 , .Names ]
        79 |-> 4
        80 |-> 1
        81 |-> 1
        82 |-> [ 2 , 6 , 620448401733239439360000 , .Names ]
        83 |-> 2
        84 |-> [ 6 , 620448401733239439360000 , .Names ]
        85 |-> 1
        86 |-> [ 2 , 6 , 620448401733239439360000 , .Names ]
        87 |-> [ 2 , 6 , 620448401733239439360000 , .Names ]
        88 |-> 4
        89 |-> 2
        90 |-> 2
        91 |-> [ 6 , 620448401733239439360000 , .Names ]
        92 |-> 6
        93 |-> [ 620448401733239439360000 , .Names ]
        94 |-> 2
        95 |-> [ 6 , 620448401733239439360000 , .Names ]
        96 |-> [ 6 , 620448401733239439360000 , .Names ]
        97 |-> 4
        98 |-> 3
        99 |-> 6
        100 |-> [ 620448401733239439360000 , .Names ]
        101 |-> 620448401733239439360000
        102 |-> [ .Names ]
        103 |-> 6
        104 |-> [ 620448401733239439360000 , .Names ]
        105 |-> [ 620448401733239439360000 , .Names ]
        106 |-> 4
        107 |-> 4
        108 |-> 620448401733239439360000
        109 |-> [ .Names ]
        110 |-> 620448401733239439360000
        111 |-> [ .Names ]
        112 |-> 620448401733239439360000
        113 |-> 6
        114 |-> [ 620448401733239439360000 , .Names ]
        115 |-> 620448401733239439360000
        116 |-> 2
        117 |-> [ 6 , 620448401733239439360000 , .Names ]
        118 |-> 620448401733239439360000
        119 |-> 1
        120 |-> [ 2 , 6 , 620448401733239439360000 , .Names ]
      </store>
    </FUN>
  </harness>
</kat-FUN>
