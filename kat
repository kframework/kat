#!/usr/bin/env bash

set -e      # Exit immediately if any command fails

# Utilities
# ---------

die()      { echo -e "FATAL:" "$@" >&2 ; exit 1 ; }
progress() { echo -e "== $@" >&2 ; }

pretty_diff() {
    git --no-pager diff --no-index "$@"
}

# Environment Setup
# -----------------

run_env() {
    local build_dir="$(pwd)/.build"
    local release_dir="$build_dir/k/k-distribution/target/release/k"
    export PATH="$release_dir/lib/native/linux:$release_dir/lib/native/linux64:$release_dir/bin/:$PATH"
}

# Runners
# -------

run_krun() {
    local run_file=$1   ; shift
    local strategy="$1" ; shift
    run_env
    export K_OPTS=-Xss500m
    krun --directory .build/defn/ -cSTRATEGY="$strategy" \
            "$run_file" "$@"
}

run_kdebug() {
    local run_file=$1   ; shift
    local strategy="$1" ; shift
    run_krun "$run_file" "$strategy" --debugger "$@"
}

run_ksearch() {
    local run_file=$1   ; shift
    local strategy="$1" ; shift
    run_env
    export K_OPTS=-Xss500m
    krun --directory .build/defn/ -cSTRATEGY="$strategy" \
            --search "$run_file" "$@"
}

run_test() {
    local imp_file strategy_file test_number counter output_dir output_prefix exit_status
    imp_file="$1"      ; shift
    strategy_file="$1" ; shift
    { test_number="$1" && shift ; } || test_number="*"
    output_dir="tests/output"

    [[ -f "$imp_file"      ]] || die "File '$imp_file' does not exist ..."
    [[ -f "$strategy_file" ]] || die "File '$strategy_file' does not exist ..."
    mkdir -p "$output_dir"

    exit_status=0
    counter=0
    while read strategy; do
        [[ "$strategy" != '' ]] || continue
        counter=$((counter + 1))
        [[ "$test_number" == '*' ]] || [[ "$test_number" == "$counter" ]] || continue

        output_prefix="$output_dir/$(echo $(basename $imp_file) $strategy | md5sum | cut --delimiter=' ' --field=1)"
        progress "testing: '$imp_file' with strategy '$strategy', output to $output_prefix.out"
        echo "Program:  $imp_file"           > "$output_prefix.out"
        echo "Strategy: $strategy"          >> "$output_prefix.out"
        { printf '=%.0s' {1..80} ; echo ; } >> "$output_prefix.out"
        run_krun "$imp_file" "$strategy"    >> "$output_prefix.out"
        pretty_diff "$output_prefix.expected" "$output_prefix.out" || exit_status="$?"
    done < "$strategy_file"
    return "$exit_status"
}

# Main
# ----

cd "$(dirname $0)"

# main functionality
run_command="$1" ; shift
case "$run_command" in

    # Running
    run)    run_krun    "$@" ;;
    debug)  run_kdebug  "$@" ;;
    search) run_ksearch "$@" ;;

    # Testing
    test) run_test "$@" ;;

    *) echo "
    usage: $0 [run|debug|search] <file> <strategy> <K args>*

       # Running
       # -------
       $0 run    <pgm> <strategy>   Run a single IMP program using given strategy
       $0 debug  <pgm> <strategy>   Run a single IMP program using given strategy in the debugger
       $0 search <pgm> <strategy>   Search a single IMP program's executions using given strategy

       Note: <pgm> is a path to a file containing an IMP program.
             <strategy> is a term in sort STRATEGY.

       # Testing
       # -------
       $0 test <pgm> <strat> Run a test from the `tests/` directory.

       Note: <pgm> is the path to the program in `tests/`
             <strat> is a file with one strategy per line

       Note: This command is more for devs and CI servers.
" ; exit ;;
esac
